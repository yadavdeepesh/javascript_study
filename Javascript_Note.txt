// data types in JavaScript

var x = "hello world"; // String 

var x = 24; // Number

var x = true; // Boolean

var x = ["js","ajax","php","python"]; // Array

var x ={first:"json",last:"roy"}; // Object

var x = null; // Null
 
var x; // undefined


// different type of Arithmetic operators

operator             Descriptipn
+                    Aliition
-                    Subtraction
*                    Multiplication
**                   Exponentiation
/                    Division
%                    Modulus(Remainder)
++                   Increment
--                   Decrement


//different type of Assignment operators

operator             Example           Same As
=                    x = y             x = y
+=                   x += y            x = x + y           
-=                   x -= y            x = x - y   
*=                   x *= y            x = x * y 
/=                   x /= y            x = x / y    
%=                   x %= y            x = x % y                 
**=                  x **= y           x = x ** y  


// different type of Comparison operators

operator             Descriptipn
==                    equal to
===                   equal value and equal type
!=                    not equal
!==                   not equal value or not equal type
>                     greater than
<                     less than
>=                    greater than or equal to
<=                    less than or equal to


// if else

   if (today is monday){
    true
   }
   else{
    false
   }

   // what are logical operators ?

   if condition 1  -> false  -> out
      condition 2  -> false 
         !
         true
         !
         statement

different type  of  logical operators:

operator      name            Descriptipn
&&            Logical and     Boths condition true output will be true either false 
||            Logical OR      One condition true  output will be true either if all condition is false
!             Logical NOT     If condition true ,that's output is false and If condition false that's output is true 
                              (provide the reverse result)
    

What is ternary Operator ?

Conditions -> False -> statement 2
   |
  true
   |
  statement

  Example

  var x = 15;
  var z;

  (x>10) ? z = true : z = false ;

  console.log(z);

  Switch statement in JavaScript

  switch(expression){
   case condition 1:statement(s)
   break;
   case condition 2:statement(s)
   break;
   case condition 3:statement(s)
   break;
   default:statement(s)
  }


// alert box in js

alert("hi sakti");

// confirm box

confirm box is provide two option ,
that is 

ok => return => true
cancel => return => false

// promt box

promt box return the enter value, that is value submited by the user.
  
  ok => return => enter value 
cancel => return => null

// Function functionName(){ // Function Definition
   statement
}

functionName();

// parameterized function
//syntax 
// Function functionName(argument1, argument2){ // Function Definition
   statement
}
functionName(argument1,argument2);

// Example

// function return value

function sum(a,b){
   return (a+b);
}
$res = sum(2,34);
console.log(res);


// retrun function 


function sum (a,b){
    var c = a+b;
    return c;
}

res = sum(22,22);

console.log("sum of two number "+res);

// Local and Global variable in JavaScript

Local variable => With in the Block and function

Global variable => Access outside and inside function and block 
                  
example:

var a = 10 ; // global variable

function printValue(){
   var b =20 ; // local variable
   document.write(b);// 20 

   document.write(a); // 10 
}

// call function 
printValue(); // 10

document.write(b); // error b is not defined

// JavaScript Basic Events

* Click (onclick)
* Double Click (ondblclick)
* Right Click (oncontentmenu)   
* Mouse Hover (onmouseenter)     
* Mouse Out   (onmouseout)
* Mouse Down  (onmousedown)    
* Mouse Up    (onmouseup)
* Key Press   (onkeypress)
* Key Up      (onkeyup)
* Load        (onload)
* Unload      (onunload)
* Resize      (onresize)
* Scroll      (onscroll)

Example

// create the function 

function helloWorld(){
   alert("Hello ");

}
// create button to triggered the Events

<button onClick ="helloWorld()" > Click Me </button>
<p ondblclick = "helloWorld()" > My name is deepesh yadav </p>


// loop in JavaScript 

Loops can execute a block of code a number of times.

types of loop in 

while loop
do while loop
for loop
for /in loop (object)
forEach (Array)

syntax

example of while loop

var a = 1;

while(a<=10){
   document.write("deepesh yadav");
   a = a + 1;
}

// example of do while loop

var b = 1;

do {
    document.write(b+ " Hi Deepesh ");
    document.write("<br>");
    b++;
}while(b<=10)


// example of for loop 

 for (var i = 1 ;i<=10 ; i++){
        document.write("i = "+i);
        document.write("<br>");
    }

//  continue And break there boths are using with loops.

continue => Loop through a block of code, but skip the value of i = 3 :

example of continue statement:

for (let i = 1; i < 5; i++) {
  if (i == 3){
     continue;
  }
   document.write(i);
  document.write("<br>");
}

break => Break out of a loop when i is 3:

example of break statement:

for (let i = 1; i < 5; i++) {
  if (i == 3){
   break;
  } 
  document.write(i);
  document.write("<br>");
  
}

NOTE :: this task is use to revise your previous tasks

// write a program of even and odd.
// write a program of even and odd between given range

 // Nested For Loops in JavaScript

Nested for loops in JavaScript means one for loop inside another for loop. In other words, a for loop placed inside another for loop is called nested for loops.

for (let i = 1; i < 100; i = i + 10) {
   for (let j = i; j < i + 10; j = j + 10) {
     document.write(b +" ");
   }
   document.write("<br>);
}

// Nested Loop Questions

1                   
12
123
1234
12345    

1
22
333
4444
55555

55555
4444
333
22
1

54321
4321
321
21
1

// Array in JavaScript

JavaScript array is an object that represents a collection of similar type of elements.

syntax and example:

index       0  1  2  3  4
var arr = [12,23,45,56,76];

document.write(arr[2]);
// output => 45

document.write(arr[5]);
// output => undefined 
// that is reason index is not present the given array

// using loop to print the value of array elements

// Before print the array element , to findout the length of given array , 
to use predefined function

console.log(arrayname.length); // provide the length of array 5

for(var a = 0 ; a < arr.length ; i++ ){
   document.write(arr[i]);
   document.write("<br>");
}

//output of Above code 

12
23
45
56
76

//that is output of array program..

// Anorther way to create Array :: 
example 

var a = new Array(10,20,30,40);

var b = new Array();
b[0] = 12;
b[1] = "harry";
b[2] = true;

document.write("<ul>");
for (i =0 ; i < 3 ; i++){
   document.write("<li>" + b[i] + "</li>");
}
document.write("</ul>");

var c = new Array(3);
for (g =0 ; g < 3 ; g++){
   b[g] = prompt("Enter the number");
}

document.write("<ul>");
for (i =0 ; i < 3 ; i++){
   document.write("<li>" + c[i] + "</li>");
}
document.write("</ul>");

// modified the array element

index       0  1  2  3  4
var arr = [12,23,45,56,76];

arr[1] = 25;

for(var a = 0 ; a < arr.length ; i++ ){
   document.write(arr[i]);
   document.write("<br>");
}

// delete the array element

delete arr[1];

// this function only delete the value . do not delete the index.


// Array Methods

JavaScript Array Methods

sort() 
reverse()
pop()
push()
shift()
unshift()
concat()
join()
slice()
splice()
isArray()
indexOf()
lastIndexOf()
entries()
every()
filter()
find()
findIndex()
includes()
some()
forEach()
toString()
valueOf()
fill()

example
sort:

var arr = ["ravi ","shubham","Ashish" , "Ramesh"];
var numArr = [66,98,22,23,20,49];

arr.sort();
numArr.sort();

arr.reverse();
numArr.reverse();

pop() method is delete the last value.

arr.pop();

push method is add the new value last.

arr.push("Deepesh");

shift() method delete the first value of array.
unshift() method add the value in first option on array.

concat() method is use to join two string ,array etc

join() method is use all value array to join in single string

slice() method is use to retrieve the multiple value given array (to get some value in existing array)

splice() method is use add and delete the value to given array

isArray() method is use to check the given value is array or not.
If given value is array then return true
If given value is not an array then return false
var numArr = [66,98,22,23,20,49];
flag =Array.isArray(numArr);
flag = true;
flag return true reason given objcet is array

var name ="Deepesh";
flag =Array.isArray(name);
flag = true;
flag return flase reason given objcet is string not array

indexOf("element value" ,"number of index you skip") js method 
search the element in the starting of  array

lastIndexOf("element value" ,"number of index you skip") js method
search the element in the ending of array

// include () method 

 includes(search term ) => retrun true if search term is present then retrun false search term not present

// some()   method 

this method use with in array 
some method retrun if one of conditions is true either false

var ages = [12,18,20,15];
document.write(arr+"<br>");

var res = arr.some(checkAdult);
document.write(res);
function checkAdult(age){
   retrun age>=18;
}

// every()   method 

this method use with in array 
every method retrun if all  of conditions is true either false

var ages = [12,18,20,15];
document.write(arr+"<br>");

var res = arr.every(checkAdult);
document.write(res);

function checkAdult(age){
   retrun age>=18;
}


find() method returns the  value of the first element in an array that pass a test

findIndex() method returns the index of the first element in an array that pass a test

filter() method creates an array filled with all array elements that pass the test

toString() method  converts an array into string and return the result

valueOf() method print the array values

fill() method fills all the elements in an array with a static value

forEach() method some as loop

JS Object 

A javaScript object is an entity having state and behavior (properties and method). For example: car, pen, bike, chair, glass, keyboard, monitor etc.

JavaScript is an object-based language. Everything is an object in JavaScript.

JavaScript is template based not class based. Here, we don't create class to get the object. But, we direct create objects.

// create object in js

var obj = {
   fname : "deepesh",
   lname : "yadav",
   age : 24,
   email : "dk@gmai.com",
   favColor :["red" ,"blue" ,"green"],
   living:{
   city : "muzaffarnagar",
   country : "india"
   },
   salary : function(){
      retrun 25000;
   },
   fullName : function(){
      retrun this.fname+" "+this.lname;
   },

  }

console.log(obj);
document.write(obj.fname);// access fname
document.write("<br>");
document.write(obj.lname); // access lname 
document.write("<br>");
document.write(obj.email+"<br>");
document.write(obj.favColor);// print array element
document.write(obj.living.city);// access the object values
document.write(obj.salary());// access function 
document.write(obj.fullname());// call fullname 
document.write(obj.salary()); // call the salary function
document.write(obj.fullName());// call the fullname function 
console.log(obj.living);