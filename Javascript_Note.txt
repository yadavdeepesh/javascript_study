// data types in JavaScript

var x = "hello world"; // String 

var x = 24; // Number

var x = true; // Boolean

var x = ["js","ajax","php","python"]; // Array

var x ={first:"json",last:"roy"}; // Object

var x = null; // Null
 
var x; // undefined


// different type of Arithmetic operators

operator             Descriptipn
+                    Aliition
-                    Subtraction
*                    Multiplication
**                   Exponentiation
/                    Division
%                    Modulus(Remainder)
++                   Increment
--                   Decrement


//different type of Assignment operators

operator             Example           Same As
=                    x = y             x = y
+=                   x += y            x = x + y           
-=                   x -= y            x = x - y   
*=                   x *= y            x = x * y 
/=                   x /= y            x = x / y    
%=                   x %= y            x = x % y                 
**=                  x **= y           x = x ** y  


// different type of Comparison operators

operator             Descriptipn
==                    equal to
===                   equal value and equal type
!=                    not equal
!==                   not equal value or not equal type
>                     greater than
<                     less than
>=                    greater than or equal to
<=                    less than or equal to


// if else

   if (today is monday){
    true
   }
   else{
    false
   }

   // what are logical operators ?

   if condition 1  -> false  -> out
      condition 2  -> false 
         !
         true
         !
         statement

different type  of  logical operators:

operator      name            Descriptipn
&&            Logical and     Boths condition true output will be true either false 
||            Logical OR      One condition true  output will be true either if all condition is false
!             Logical NOT     If condition true ,that's output is false and If condition false that's output is true 
                              (provide the reverse result)
    

What is ternary Operator ?

Conditions -> False -> statement 2
   |
  true
   |
  statement

  Example

  var x = 15;
  var z;

  (x>10) ? z = true : z = false ;

  console.log(z);

  Switch statement in JavaScript

  switch(expression){
   case condition 1:statement(s)
   break;
   case condition 2:statement(s)
   break;
   case condition 3:statement(s)
   break;
   default:statement(s)
  }


// alert box in js

alert("hi sakti");

// confirm box

confirm box is provide two option ,
that is 

ok => return => true
cancel => return => false

// promt box

promt box return the enter value, that is value submited by the user.
  
  ok => return => enter value 
cancel => return => null

// Function functionName(){ // Function Definition
   statement
}

functionName();

// parameterized function
//syntax 
// Function functionName(argument1, argument2){ // Function Definition
   statement
}
functionName(argument1,argument2);

// Example

// function return value

function sum(a,b){
   return (a+b);
}
$res = sum(2,34);
console.log(res);


// retrun function 


function sum (a,b){
    var c = a+b;
    return c;
}

res = sum(22,22);

console.log("sum of two number "+res);

// Local and Global variable in JavaScript

Local variable => With in the Block and function

Global variable => Access outside and inside function and block 
                  
example:

var a = 10 ; // global variable

function printValue(){
   var b =20 ; // local variable
   document.write(b);// 20 

   document.write(a); // 10 
}

// call function 
printValue(); // 10

document.write(b); // error b is not defined

// JavaScript Basic Events

* Click (onclick)
* Double Click (ondblclick)
* Right Click (oncontentmenu)   
* Mouse Hover (onmouseenter)     
* Mouse Out   (onmouseout)
* Mouse Down  (onmousedown)    
* Mouse Up    (onmouseup)
* Key Press   (onkeypress)
* Key Up      (onkeyup)
* Load        (onload)
* Unload      (onunload)
* Resize      (onresize)
* Scroll      (onscroll)

Example

// create the function 

function helloWorld(){
   alert("Hello ");

}
// create button to triggered the Events

<button onClick ="helloWorld()" > Click Me </button>
<p ondblclick = "helloWorld()" > My name is deepesh yadav </p>


// loop in JavaScript 

Loops can execute a block of code a number of times.

types of loop in 

while loop
do while loop
for loop
for /in loop (object)
forEach (Array)

syntax

example of while loop

var a = 1;

while(a<=10){
   document.write("deepesh yadav");
   a = a + 1;
}

// example of do while loop

var b = 1;

do {
    document.write(b+ " Hi Deepesh ");
    document.write("<br>");
    b++;
}while(b<=10)


// example of for loop 

 for (var i = 1 ;i<=10 ; i++){
        document.write("i = "+i);
        document.write("<br>");
    }

//  continue And break there boths are using with loops.

continue => Loop through a block of code, but skip the value of i = 3 :

example of continue statement:

for (let i = 1; i < 5; i++) {
  if (i == 3){
     continue;
  }
   document.write(i);
  document.write("<br>");
}

break => Break out of a loop when i is 3:

example of break statement:

for (let i = 1; i < 5; i++) {
  if (i == 3){
   break;
  } 
  document.write(i);
  document.write("<br>");
  
}

NOTE :: this task is use to revise your previous tasks

// write a program of even and odd.
// write a program of even and odd between given range

 // Nested For Loops in JavaScript

Nested for loops in JavaScript means one for loop inside another for loop. In other words, a for loop placed inside another for loop is called nested for loops.

for (let i = 1; i < 100; i = i + 10) {
   for (let j = i; j < i + 10; j = j + 10) {
     document.write(b +" ");
   }
   document.write("<br>);
}

// Nested Loop Questions

1                   
12
123
1234
12345    

1
22
333
4444
55555

55555
4444
333
22
1

54321
4321
321
21
1

// Array in JavaScript

JavaScript array is an object that represents a collection of similar type of elements.

syntax and example:

index       0  1  2  3  4
var arr = [12,23,45,56,76];

document.write(arr[2]);
// output => 45

document.write(arr[5]);
// output => undefined 
// that is reason index is not present the given array

// using loop to print the value of array elements

// Before print the array element , to findout the length of given array , 
to use predefined function

console.log(arrayname.length); // provide the length of array 5

for(var a = 0 ; a < arr.length ; i++ ){
   document.write(arr[i]);
   document.write("<br>");
}

//output of Above code 

12
23
45
56
76

//that is output of array program..

// Anorther way to create Array :: 
example 

var a = new Array(10,20,30,40);

var b = new Array();
b[0] = 12;
b[1] = "harry";
b[2] = true;

document.write("<ul>");
for (i =0 ; i < 3 ; i++){
   document.write("<li>" + b[i] + "</li>");
}
document.write("</ul>");

var c = new Array(3);
for (g =0 ; g < 3 ; g++){
   b[g] = prompt("Enter the number");
}

document.write("<ul>");
for (i =0 ; i < 3 ; i++){
   document.write("<li>" + c[i] + "</li>");
}
document.write("</ul>");

